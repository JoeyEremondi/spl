
<HTML>

<HEAD>
<META HTTP-EQUIV="Context-Type" CONTEXT="text/html;charset=windows-1252">
<meta name="GENERATOR" content="Microsoft Internet Assistant for PowerPoint 97">
</HEAD>

<BODY  BGCOLOR="#ffffff"  TEXT="#000000"  LINK="#0000ff"  VLINK="#cc3399" >


  <FONT size=4><STRONG> Notes: </STRONG> </FONT>
  <HR SIZE=3>
  <P> <UL>
This talk is about a new approach to an old problem: software evolution and reuse are difficult.
<BR></UL><UL>
Software components contain global knowledge about the systems in which they operate; when the systems change, the components must also change.
</UL><UL>
Implicit context is a new concept that allows this global knowledge to be separated from components.  As a result, components can remain unchanged as the system around them changes.
</UL><UL>
The rest of the talk is structured as follows.  First, I’m going to illustrate the effects this global knowledge has on reusability and evolvability with a series of simple examples.
</UL><UL>
I’ll demonstrate how the concept of implicit context can be used to meet our goal of separating this global knowledge from components, and how we applied implicit context via a proof-of-concept prototype to the Java Swing library.
</UL><UL>
And finally, I’ll briefly describe some previous work,and summarize.</UL> </P> 


</BODY>
</HTML>
